[{"C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\index.js":"1","C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\App.js":"2","C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\reportWebVitals.js":"3","C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\components\\login.component.js":"4","C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\components\\error-modal.component.js":"5","C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\components\\register.component.js":"6"},{"size":152,"mtime":1609634092851,"results":"7","hashOfConfig":"8"},{"size":519,"mtime":1609633319124,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2325,"mtime":1609633734031,"results":"11","hashOfConfig":"8"},{"size":876,"mtime":1609632785429,"results":"12","hashOfConfig":"8"},{"size":2830,"mtime":1609633911461,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7hhgfy",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},"C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\index.js",[],"C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\App.js",["29","30"],"C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\reportWebVitals.js",[],["31","32"],"C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\components\\login.component.js",["33","34"],"import { Container, Col, Row, Form, Card, Button } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport ErrorModal from './error-modal.component';\r\n\r\nimport './styles/auth.css'\r\nexport default function Login() {\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n\r\n\r\n\r\n    const onSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const user = {\r\n                username,\r\n                password\r\n            }\r\n            const userRes = await Axios.post(\"http://localhost:5000/api/users/authenticate\", user);\r\n\r\n        } catch (err) {\r\n            console.log(err.response);\r\n                setError(err.response.data[0].errors[0].errorMessage);\r\n\r\n            setModalShow(true);\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col xs={12}>\r\n                </Col>\r\n                <Card className=\"auth-card\">\r\n                    <ErrorModal\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                        error={error}\r\n\r\n                    />\r\n                    <Card.Body>\r\n                        <Card.Title>Login</Card.Title>\r\n                        <Form onSubmit={onSubmit}>\r\n                            <Form.Group controlId=\"formBasicUsername\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={(e) => setUsername(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">Login</Button>\r\n                        </Form>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n        </Container>\r\n\r\n\r\n    );\r\n}","C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\components\\error-modal.component.js",[],"C:\\Users\\saent\\Projects\\UrlShortener\\client\\src\\components\\register.component.js",["35","36"],"import { Container, Col, Row, Form, Card, Button } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport ErrorModal from './error-modal.component';\r\n\r\nimport './styles/auth.css'\r\nexport default function Register() {\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [confirmPassword, setConfirmPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n\r\n\r\n\r\n    const onSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const user = {\r\n                username,\r\n                password,\r\n                confirmPassword\r\n            }\r\n            const userRes = await Axios.post(\"http://localhost:5000/api/users\", user);\r\n\r\n        } catch (err) {\r\n        // console.log(err.response.data[0].errors[0].errorMessage);\r\n                setError(err.response.data[0].errors[0].errorMessage);\r\n\r\n    \r\n            setModalShow(true);\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        <Container>\r\n            <Row>\r\n                <Col xs={12}>\r\n                </Col>\r\n                <Card className=\"auth-card\">\r\n                    <ErrorModal\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                        error={error}\r\n\r\n                    />\r\n                    <Card.Body>\r\n                        <Card.Title>Register</Card.Title>\r\n                        <Form onSubmit={onSubmit}>\r\n                            <Form.Group controlId=\"formBasicUsername\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={(e) => setUsername(e.target.value)} />\r\n                            </Form.Group>\r\n                          \r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Re-enter Password\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">Register</Button>\r\n                        </Form>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n        </Container>\r\n\r\n\r\n    );\r\n}",{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":2,"column":49,"nodeType":"39","messageId":"40","endLine":2,"endColumn":57},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"37","severity":1,"message":"46","line":2,"column":27,"nodeType":"39","messageId":"40","endLine":2,"endColumn":36},{"ruleId":"37","severity":1,"message":"47","line":23,"column":19,"nodeType":"39","messageId":"40","endLine":23,"endColumn":26},{"ruleId":"37","severity":1,"message":"46","line":2,"column":27,"nodeType":"39","messageId":"40","endLine":2,"endColumn":36},{"ruleId":"37","severity":1,"message":"47","line":25,"column":19,"nodeType":"39","messageId":"40","endLine":25,"endColumn":26},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"'useEffect' is defined but never used.","'userRes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]